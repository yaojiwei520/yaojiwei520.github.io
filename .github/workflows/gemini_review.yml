name: Gemini Code Review

on:
  pull_request:
    branches:
      - main

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置 Python 3.9+
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 安装依赖项
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai

      - name: Gemini 获取差异并分析
        id: gemini
        run: |
          python gemini_code_review.py
          echo "GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}"  # 打印API Key
          echo "Generated Issue Body:"
          echo "${{ steps.gemini.outputs.issue_body }}"  # 打印输出
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: 检查 issue_body 是否为空
        run: |
          echo "issue_body is empty: ${{ steps.gemini.outputs.issue_body == '' }}"

      - name: 创建问题（如果需要）
        if: ${{ steps.gemini.outputs.issue_body != '' }}
        uses: actions/github-script@v6
        with:
          script: |
            console.log("Creating issue...");
            const issueBody = `${{ steps.gemini.outputs.issue_body }}`;
            console.log("issueBody:", issueBody); // 打印 issueBody 在 JavaScript 中的值
            if (issueBody) {
              github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Gemini Code Review Findings',
                body: issueBody,
              });
              console.log("Issue created successfully!");
            } else {
              console.log("Issue body is empty, not creating issue.");
            }
